[{"C:\\Projects\\React\\repository\\src\\pages\\Main\\index.js":"1","C:\\Projects\\React\\repository\\src\\pages\\Repositorio\\index.js":"2","C:\\Projects\\React\\repository\\src\\routes.js":"3","C:\\Projects\\React\\repository\\src\\App.js":"4","C:\\Projects\\React\\repository\\src\\styles\\global.js":"5","C:\\Projects\\React\\repository\\src\\reportWebVitals.js":"6","C:\\Projects\\React\\repository\\src\\pages\\Main\\style.js":"7","C:\\Projects\\React\\repository\\src\\index.js":"8","C:\\Projects\\React\\repository\\src\\services\\api.js":"9"},{"size":3398,"mtime":1606430735408,"results":"10","hashOfConfig":"11"},{"size":121,"mtime":1606254809665,"results":"12","hashOfConfig":"11"},{"size":478,"mtime":1606254979194,"results":"13","hashOfConfig":"11"},{"size":205,"mtime":1606255881180,"results":"14","hashOfConfig":"11"},{"size":495,"mtime":1606255813636,"results":"15","hashOfConfig":"11"},{"size":362,"mtime":1606167257815,"results":"16","hashOfConfig":"11"},{"size":1911,"mtime":1606430500627,"results":"17","hashOfConfig":"11"},{"size":478,"mtime":1606173672909,"results":"18","hashOfConfig":"11"},{"size":123,"mtime":1606258612778,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1vpq8xc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\React\\repository\\src\\pages\\Main\\index.js",["40"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport { FaGithub, FaPlus, FaSpinner, FaBars, FaTrash } from 'react-icons/fa';\r\nimport { Container, Form, SubmitButton, List, DeleteButton } from './style';\r\nimport api from '../../services/api';\r\n\r\nexport default function Main() {\r\n    const [newRepo, setNewRepo] = useState('');\r\n    const [repositorios, setRepositorios] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    //Buscar\r\n    useEffect(() => {\r\n        const repoStorage = localStorage.getItem('repos');\r\n\r\n        if (repoStorage) {\r\n            setRepositorios(JSON.parse(repoStorage));\r\n        }\r\n    }, []);\r\n\r\n    //Salvar\r\n    useEffect(() => {\r\n        localStorage.setItem('repos', JSON.stringify(repositorios));\r\n    }, [repositorios]);\r\n\r\n    const handleSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        async function submit() {\r\n            setLoading(true);\r\n            setAlert(null);\r\n            try {\r\n                if (newRepo === '')\r\n                    throw new Error('É necessário indicar um repositório');\r\n\r\n                const response = await api.get(`repos/${newRepo}`);\r\n\r\n                if (repositorios.find(repo => repo.name === newRepo))\r\n                    throw new Error('Repositório duplicado');\r\n\r\n                const data = {\r\n                    name: response.data.full_name,\r\n                }\r\n                setRepositorios([...repositorios, data]);\r\n                setNewRepo('');\r\n            } catch (e) {\r\n                setAlert(true);\r\n                console.log(e);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n\r\n        }\r\n\r\n        submit();\r\n    }, [newRepo, repositorios]);\r\n\r\n    function handleInputChange(e) {\r\n        setNewRepo(e.target.value);\r\n        setAlert(null);\r\n    }\r\n\r\n    const handleDelete = useCallback((repo) => {\r\n        const find = repositorios.filter(r => r.name !== repo);\r\n        setRepositorios(find);\r\n    }, [repositorios]);\r\n\r\n    return (\r\n        <Container>\r\n            <h1>\r\n                <FaGithub size={25} />\r\n                <h1>Meus Repositórios</h1>\r\n            </h1>\r\n            <Form onSubmit={handleSubmit} error={alert}>\r\n                <input type=\"text\"\r\n                    placeholder=\"Adicionar Repositórios\"\r\n                    value={newRepo}\r\n                    onChange={handleInputChange} />\r\n                <SubmitButton Loading={loading ? 1 : 0}>\r\n                    {loading ? (\r\n                        <FaSpinner color=\"#FFF\" size={14} />\r\n                    ) : (\r\n                            <FaPlus color=\"#FFF\" size={14} />\r\n                        )}\r\n                </SubmitButton>\r\n            </Form>\r\n            <List>\r\n                {repositorios.map(repo => (\r\n                    <li key={repo.name}>\r\n                        <span>\r\n                            <DeleteButton onClick={() => handleDelete(repo.name)}>\r\n                                <FaTrash size={14} />\r\n                            </DeleteButton>\r\n                            {repo.name}</span>\r\n                        <a href=\"\">\r\n                            <FaBars size={20} />\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </Container>\r\n    )\r\n}","C:\\Projects\\React\\repository\\src\\pages\\Repositorio\\index.js",[],"C:\\Projects\\React\\repository\\src\\routes.js",[],"C:\\Projects\\React\\repository\\src\\App.js",[],"C:\\Projects\\React\\repository\\src\\styles\\global.js",[],["41","42"],"C:\\Projects\\React\\repository\\src\\reportWebVitals.js",[],"C:\\Projects\\React\\repository\\src\\pages\\Main\\style.js",[],"C:\\Projects\\React\\repository\\src\\index.js",[],"C:\\Projects\\React\\repository\\src\\services\\api.js",[],{"ruleId":"43","severity":1,"message":"44","line":95,"column":25,"nodeType":"45","endLine":95,"endColumn":36},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-global-assign","no-unsafe-negation"]